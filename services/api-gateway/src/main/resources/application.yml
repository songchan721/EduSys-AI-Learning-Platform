server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  # Redis Configuration for Rate Limiting
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # Cloud Gateway Configuration
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      
      # Global CORS Configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600

      # Default Filters
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar

# Service Discovery (if using Eureka)
eureka:
  client:
    enabled: false
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      service: api-gateway

# Logging Configuration
logging:
  level:
    com.learningplatform.gateway: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    reactor.netty: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"

# Custom Gateway Configuration
gateway:
  rate-limiting:
    enabled: true
    default-requests-per-minute: 60
    burst-capacity: 100
  
  circuit-breaker:
    enabled: true
    failure-threshold: 5
    recovery-timeout-seconds: 30
  
  security:
    jwt:
      secret: ${JWT_SECRET:your-secret-key-here-make-it-long-and-secure}
      expiration: 86400000 # 24 hours
    
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600

# Service URLs (for health checks and direct communication)
services:
  user-service:
    url: ${USER_SERVICE_URL:http://localhost:8081}
  agent-orchestrator:
    url: ${AGENT_ORCHESTRATOR_URL:http://localhost:8082}
  content-service:
    url: ${CONTENT_SERVICE_URL:http://localhost:8083}
  payment-service:
    url: ${PAYMENT_SERVICE_URL:http://localhost:8084}
  messaging-service:
    url: ${MESSAGING_SERVICE_URL:http://localhost:8085}